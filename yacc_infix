LEX FILE:

%{
#include <stdio.h>
#include "y.tab.h"
extern int yylval;
%}

%%

[0-9]+ {
yylval = atoi(yytext);
return NUMBER;
}
[\t];
[\n] return 0;
0 return yytext[0];

%%


_______________________________________________________________________
YACC FILE:
%{
#include <stdio.h>
int flag = 0;
%}

%token NUMBER
%left '+' '-'
%left '*' '/' '%'
%left '(' ')'

%%

ArithmeticExpression: E{

                        printf("\n Result = %d \n", $$);
                        return 0;
                    }
E:E'+'E {$$ = $1+$3;} |
E:E'-'E {$$ = $1-$3;} |
E:E'*'E {$$ = $1*$3;} |
E:E'/'E {$$ = $1/$3;} |
E:E'%'E {$$ = $1%$3;} |
'('E')' {$$ = $2;   } |
NUMBER {$$ = $1;    }
;

%%

void main()
{
printf("Enter an Arithmetic Expression : ");
yyparse();
if(flag == 0)
        printf("\n VALID EXPRESSION\n");
}
void yyerror()
{
printf("\n INVALID EXPRESSION\n");
flag = 1;
}

int yywrap()
{return 1;}
